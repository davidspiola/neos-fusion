prototype(Webandco.Fusion:Component.Tag.Img) < prototype(Neos.Fusion:Component) {

    cssClass = 'image'
    cssModifier = Webandco.Fusion:ClassModifier

    imageSrc = 'must-be-set'
    imageWidth = null
    imageHeight = null
    imageAlt = ''
    imageTitle = ''

    @styleguide {
        title = 'Tag: img'
        props {
            imageAlt = 'image alt text'
            imageTitle = 'image title text'
        }
    }

    renderer = Neos.Fusion:Tag {
        tagName = 'img'

        // assign default class of component
        attributes.class = ${props.cssClass}
        attributes.class.@if.isset = ${!String.isBlank(props.cssClass)}

        // assign css modfieres
        attributes.class.@process.cssModifier = Webandco.Fusion:Component.ClassModifier {
            cssClass = ${props.cssClass}
            cssModifier = ${props.cssModifier}
        }

        attributes.src = Webandco.Fusion:Component.Tag.Img.Src {
            imageSrc = ${props.imageSrc}
            imageWidth = ${props.imageWidth}
            imageHeight = ${props.imageHeight}
        }

        attributes.alt = ${props.imageAlt}
        attributes.title = ${props.imageTitle}
    }
}

prototype(Webandco.Fusion:Component.Tag.Img.Src) < prototype(Neos.Fusion:Component) {

    imageSrc = 'must-be-set'
    imageWidth = null
    imageHeight = null

    renderer = Neos.Fusion:Case {
        asset {
            condition = ${Type.isObject(props.imageSrc)}
            renderer = Neos.Neos:ImageUri {
                allowCropping = true
                allowUpScaling = true
                asset = ${props.imageSrc}
                width = ${props.imageWidth}
                height = ${props.imageHeight}
            }
        }

        resource {
            condition = ${String.indexOf(props.imageSrc, 'resource') >= 0}
            renderer = Neos.Fusion:ResourceUri {
                path = ${props.imageSrc}
            }
        }

        link {
            condition = ${String.indexOf(props.imageSrc, 'http') >= 0}
            renderer = ${props.imageSrc}
        }

        fallback {
            condition = ${true}
            renderer = '/_Resources/Static/Packages/Neos.Neos/Images/dummy-image.svg'
        }
    }
}

